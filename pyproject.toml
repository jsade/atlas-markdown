[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "atlas-markdown"
version = "0.1.1"
description = "Atlas Markdown is a Python-based tool that downloads and converts Atlassian product documentation into clean Markdown files optimized for tools like Obsidian."
readme = "README.md"
requires-python = ">=3.11"
license = {text = "GPLv3"}
authors = [
    {name = "Juha Sadeharju", email = "juha@sadeharju.org"}
]
dependencies = [
    "playwright>=1.40.0",
    "click>=8.0.0",
    "beautifulsoup4>=4.12.0",
    "markdownify>=0.11.0",
    "aiofiles>=23.0.0",
    "httpx>=0.25.0",
    "Pillow>=10.0.0",
    "tqdm>=4.66.0",
    "rich>=13.0.0",
    "aiosqlite>=0.19.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "commitizen>=3.0.0",
    "python-semantic-release>=10.1.0",
]

[project.scripts]
atlas-markdown = "atlas_markdown.cli:main"

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
branch = "main"
upload_to_repository = false
upload_to_release = true
build_command = "python -m build"
commit_parser = "conventional"
major_on_zero = false
allow_zero_version = true
tag_format = "v{version}"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf", "refactor", "style", "test", "docs"]
major_tags = []

[tool.semantic_release.branches.main]
match = "main"

[tool.semantic_release.changelog]
exclude_commit_patterns = [
    "chore*",
    "ci*",
    "Merge pull request*"
]

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = true
extensions = []
autoescape = true

[tool.black]
line-length = 100
target-version = ['py311']

[tool.ruff]
line-length = 100
select = ["E", "F", "W", "I", "N", "B", "UP"]
ignore = ["E501"]  # Line too long, handled by black

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["."]
asyncio_mode = "auto"

[tool.mypy]
python_version = "3.11"
strict = true

# These libraries have type stubs available - install them:
# pip install types-aiofiles types-beautifulsoup4 types-Pillow types-tqdm types-click

[[tool.mypy.overrides]]
module = [
    "markdownify",        # No stubs available
    "playwright.*",       # Complex async API, stubs may not be complete
    "commitizen.*",       # No stubs available
    "dotenv",            # python-dotenv may not have complete stubs
    "aiosqlite",         # May not have stubs
    "rich.*",            # Rich has py.typed but sometimes has issues
    "httpx",             # Has its own type hints but might need overrides
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["atlas_markdown"]
omit = ["tests/*", "venv/*"]
